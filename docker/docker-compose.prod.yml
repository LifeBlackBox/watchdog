---

version: "3.8"
services:
  caddy:
    image: "caddy:latest"
    restart: unless-stopped
    env_file: ./config/.env
    volumes:
      - ./docker/caddy/Caddyfile:/srv/Caddyfile  # configuration
      - ./docker/caddy/ci.sh:/etc/ci.sh  # test script
      - caddy-config:/config  # configuration autosaves
      - caddy-data:/data  # saving certificates
      - django-static:/var/www/django/static  # serving django's statics
      - django-media:/var/www/django/media  # serving django's media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - proxynet

  web:
    <<: &web
      image: "registry.gitlab.com/LifeBlackBox/watchdog-backend:latest"
      build:
        target: prod_build
        args:
          DJANGO_ENV: prod

      restart: unless-stopped
      volumes:
        - django-media:/var/www/django/media  # since in dev it is app's folder
        - django-locale:/app/locale  # since in dev it is app's folder

    command: bash ./docker/django/gunicorn.sh
    networks:
      - proxynet
    expose:
      - 8000

# This task is an example of how to extend existing ones:
#   some_worker:
#     <<: *web
#     command: python manage.py worker_process
#     deploy:
#       replicas: 2

networks:
  # Network for your proxy server and application to connect them,
  # do not use it for anything else!
  proxynet:

volumes:
  django-media:
  django-locale:
  caddy-config:
  caddy-data:
