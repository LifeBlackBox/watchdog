version: "3.8"
services:
  db:
    image: "postgres:latest"
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file: ./config/.env
    networks:
      - watchdog

  web:
    <<: &web
      image: "watchdog-backend:dev"
      restart: always
      build:
        target: development_build
        context: .
        dockerfile: ./docker/django/Dockerfile
        args:
          DJANGO_ENV: development
        cache_from:
          - "watchdog-backend:dev"
          - "watchdog-backend:latest"
          - "*"

      volumes:
        - django-static:/var/www/django/static
      depends_on:
        - db
      networks:
        - watchdog
      env_file: ./config/.env
      environment:
        DJANGO_DATABASE_HOST: db

      command: python -Wd manage.py runserver 0.0.0.0:8000
      healthcheck:
        test: |
          /usr/bin/test $$(
            /usr/bin/curl --fail http://localhost:8000/health/?format=json
            --write-out "%{http_code}" --silent --output /dev/null
          ) -eq 200
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 30s

# This task is an example of how to extend existing ones:
#   some_worker:
#     <<: *web
#     command: python manage.py worker_process

networks:
  watchdog:

volumes:
  pgdata:
  django-static:
