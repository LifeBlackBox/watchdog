version: "3.9"


services:
  caddy:
    image: "caddy:2.6.2-alpine"
    restart: unless-stopped
    networks:
      - watchdog_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - $PWD/docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  watchdog:
    image: "watchdog-backend:dev"
    restart: unless-stopped
    build:
      target: dev_build
      context: .
      dockerfile: docker/django/Dockerfile
      args:
        DJANGO_ENV: prod
    ports:
      - "8000:8000"
    volumes:
      - django-static:/var/www/django/static
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - watchdog_network
    env_file: config/.env
    #    command: python -Wd manage.py runserver 0.0.0.0:8000
    healthcheck:
      test: |
        /usr/bin/test $$(
          /usr/bin/curl --fail http://localhost:8000/health/?format=json
          --write-out "%{http_code}" --silent --output /dev/null
        ) -eq 200
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  db:
    image: "postgres:latest"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5442:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - watchdog_network

  redis:
    image: "redis:latest"
    restart: unless-stopped
    ports:
      - "6389:6379"
    networks:
      - watchdog_network


networks:
  watchdog_network:
    ipam:
      driver: default
      config:
        - subnet: 162.28.0.0/16

volumes:
  db_data:
  django-static:
  caddy_data:
  caddy_config:
