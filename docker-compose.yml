services:
  nginx:
    image: "nginx:latest"
    restart: unless-stopped
    networks:
      - watchdog_network
    ports:
      - "80:8000"

  app:
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - nginx
    volumes:
      - django-static:/var/www/django/static
      - .:/app
    networks:
      - watchdog_network
    env_file: config/.env
    command: |
        python -m uvicorn server.asgi:app
        --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: |
        /usr/bin/test $$(
          /usr/bin/curl --fail http://localhost:8000/health/?format=json
          --write-out "%{http_code}" --silent --output /dev/null
        ) -eq 200
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  postgres:
    image: "postgres:latest"
    restart: unless-stopped
    env_file: config/.env
    environment:
      - POSTGRES_USER=postgres # ENV!
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5442:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    networks:
      - watchdog_network

  redis:
    image: "redis:latest"
    restart: unless-stopped
    env_file: config/.env
    ports:
      - "6389:6379"
    networks:
      - watchdog_network


networks:
  watchdog_network:

volumes:
  postgres-data:
  django-static:
